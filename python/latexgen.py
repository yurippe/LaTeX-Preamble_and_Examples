#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import base64
import argparse
template = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIExvYWQgUHJlYW1wbGUgICAgICAgICAlCiUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUKClxkb2N1bWVudGNsYXNzW2E0LCBlbmdsaXNoXXthcnRpY2xl
fQoKJUltcG9ydCBmcm9tIHRoZSBzYW1lIGZvbGRlcgolXGlucHV0e3ByZWFtYmxlX2VuLnRleH0K
CiVJbXBvcnQgZnJvbSBhYnNvbHV0ZSBwYXRoCiVcdXNlcGFja2FnZXtpbXBvcnR9CiVcaW1wb3J0
e0M6L0dpdEh1Yi9MYVRlWF9QcmVhbWJsZV9hbmRfRXhhbXBsZXMvcHJlYW1ibGUvfXtwcmVhbWJs
ZV9kay50ZXh9CgolSW1wb3J0IGZyb20gYSByZWxhdGl2ZSBwYXRoClx1c2VwYWNrYWdle2ltcG9y
dH0KXHN1YmltcG9ydHsuLi9wcmVhbWJsZS99e3ByZWFtYmxlX2VuLnRleH0KCiUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUKJSBEb2N1bWVudCBzdGFydHMgaGVyZSEgJQolJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlCgpcYmVnaW57ZG9jdW1lbnR9CgolIERlZmluZSB0aXRsZSBhbmQgbW9yZSBvbiBm
cm9udHBhZ2UKCVxzZXR0aXRsZXtUaXRsZX17U3VidGl0bGV9CiAgICBcYWRkYXV0aHtTdGVmZmFu
IFPDuGx2c3Rlbn17MjAxNTA1ODMyQHBvc3QuYXUuZGt9e1wsIGF1NTM0MDY4fQpcbWFrZXRpdGxl
CgpcYmVnaW57YWJzdHJhY3R9Clxub2luZGVudApMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwg
Y29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LCBzZWQgZG8gZWl1c21vZCB0ZW1wb3IgaW5jaWRp
ZHVudCB1dCBsYWJvcmUgZXQgZG9sb3JlIG1hZ25hIGFsaXF1YS4gVXQgZW5pbSBhZCBtaW5pbSB2
ZW5pYW0sIHF1aXMgbm9zdHJ1ZCBleGVyY2l0YXRpb24gdWxsYW1jbyBsYWJvcmlzIG5pc2kgdXQg
YWxpcXVpcCBleCBlYSBjb21tb2RvIGNvbnNlcXVhdC4KXGVuZHthYnN0cmFjdH0KClx0YWJsZW9m
Y29udGVudHMKClxuZXdwYWdlClxzZWN0aW9ue0ludHJvZHVjdGlvbn0gXGxhYmVse3NlYzppbnRy
b30KTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxp
dCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBt
YWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNp
dGF0aW9uIHVsbGFtY28gbGFib3JpcyBuaXNpIHV0IGFsaXF1aXAgZXggZWEgY29tbW9kbyBjb25z
ZXF1YXQuCgoKClxiZWdpbnt0aGViaWJsaW9ncmFwaHl9ezl9ClxiaWJpdGVte2JpYml0ZW19CglM
YXN0LCBGaXJzdDogXGVtcGh7VGl0bGV9LCBwdWJsaWNhdGlvbiwgZWRpdGlvbiwgeWVhcgpcZW5k
e3RoZWJpYmxpb2dyYXBoeX0KXGJpYmxpb2dyYXBoeXN0eWxle2FiYnJ2fQpcYmlibGlvZ3JhcGh5
e3JlZmVyZW5jZXJ9CgpcbmV3cGFnZQpcYXBwZW5kaXgKXHNlY3Rpb257QXBwZW5kaXh9CkxvcmVt
IGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQsIHNlZCBk
byBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxp
cXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1
bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4IGVhIGNvbW1vZG8gY29uc2VxdWF0LgoK
XGVuZHtkb2N1bWVudH0=
"""
preamble_base = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICBQYXBlcnNpemUgYW5kIGVuY29k
aW5nICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgU2l6ZSBvZiBtYXJn
aW5zIGNhbiBiZSBjaGFuZ2VkIGhlcmUgaW4gdGhlIG91dGNvbW1lbnRlZCB2ZXJzaW9uIQolXHVz
ZXBhY2thZ2VbYTRwYXBlciwgdG90YWw9ezZpbiwgOGlufV17Z2VvbWV0cnl9CSV0b3RhbD17d2lk
dGgsIGhlaWdodH0KXHVzZXBhY2thZ2VbYTRwYXBlcl17Z2VvbWV0cnl9CgolIEJhc2ljczogZm9u
dCwgY29kZWMgZXRjLgpcdXNlcGFja2FnZVt1dGY4XXtpbnB1dGVuY30JCQkJCQklIGVuY29kaW5n
OiB1dGYtOCAobm9yZGljIGxldHRlcnMpClx1c2VwYWNrYWdlW1QxXXtmb250ZW5jfQkJCQkJCSUg
dXNlIDgtYml0IGVuY29kZWQgZm9udHMKXHJlbmV3Y29tbWFuZHtcc2ZkZWZhdWx0fXtwaHZ9CQkJ
CQklIGNoYW5nZXMgdGhlIGRlZmF1bHQgZm9udAoKJVx1c2VwYWNrYWdlW3BhcmZpbGxde3BhcnNr
aXB9ICAgICAgJUluc3RlYWQgb2YgaW5kZW50aW5nIG9uIGEgbmV3bGluZSBhZGRzIHdoaXRlc3Bh
Y2UKCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgIFRhYmxlcyBhbmQg
ZmlndXJlcyAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKClx1c2VwYWNr
YWdle3RhYnVsYXJ4LGJvb2t0YWJzLGF1dGhibGt9CQkgICAgJSB2YXJpb3VzIGJhc2ljIHN0dWZm
IGZvciB0YWJsZXMgYW5kIG1vcmUKCiUgRmlndXJlcyBhbmQgY2FwdGlvbnMKXHVzZXBhY2thZ2V7
Y2FwdGlvbn0JCQkJCQkJJSBjcmVhdGUgY2FwdGlvbnMgZm9yIGZpZ3VyZXMKXHVzZXBhY2thZ2V7
c3ViZmlnfQkJCQkJCQkJJSBjcmVhdGUgc3ViZmlndXJlcyBvZiBhIGZpZ3VyZQolXHVzZXBhY2th
Z2V7c3ViY2FwdGlvbn0JCQkJCSUgY3JlYXRlIGNhcHRpb25zIGZvciBzdWJmaWd1cmVzCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAlICAgICBjdXJyZW50bHkgb2ZmLCBkdWUgdG8g
Y29uZmxpY3RzCgpcdXNlcGFja2FnZXt3cmFwZmlnfQkJCQkJCQklIGxldHRpbmcgZmlndXJlcyBi
ZSBpbiB0ZXh0CgpcdXNlcGFja2FnZXtyb3RhdGluZ30gICAgICAgICAgICAgJSBsZXQgYW55IGVu
dmlyb25tZW50IGJlIHJvdGF0ZWQgKGZpZ3VyZXMgc2lkZXdheXMpCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAlICAgICBcYmVnaW57c2lkZXdheXN9IG9yIFxiZWdpbnt0dXJufXsz
MH0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICAgICAgIFZh
cmlhYmxlcyAgICAgICAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUKXHVzZXBhY2thZ2V7cGdma2V5c30JCQklSW5pdGlhbGl6ZSB0aGUgdmFyaWFibGUga2V5LXZh
bHVlIHBhcmlycwoKXG5ld2NvbW1hbmR7XHNldHZhbHVlfVsxXXtccGdma2V5c3svdmFyaWFibGVz
LyMxfX0KXG5ld2NvbW1hbmR7XGdldHZhbHVlfVsxXXtccGdma2V5c3ZhbHVlb2Z7L3ZhcmlhYmxl
cy8jMX19ClxuZXdjb21tYW5ke1xkZWNsYXJlfVsxXXslCiBccGdma2V5c3sKICAvdmFyaWFibGVz
LyMxLmlzIGZhbWlseSwKICAvdmFyaWFibGVzLyMxLnVua25vd24vLnN0eWxlID0ge1xwZ2ZrZXlz
Y3VycmVudHBhdGgvXHBnZmtleXNjdXJyZW50bmFtZS8uaW5pdGlhbCA9ICMjMX0KIH0lCn0KClxk
ZWNsYXJle30KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgIExhVGVY
IFByb2dyYW1taW5nICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKClx1
c2VwYWNrYWdle3hwYXJzZX0JCQkJCQkJCSUgU2Nhbm5pbmcgYXJndW1lbnRzClx1c2VwYWNrYWdl
e2lmdGhlbn0JCQkJCQkJCSUgQ29uZGl0aW9uYWxzClx1c2VwYWNrYWdle2NhbGN9CQkJCQkJCQkl
IENhbGN1bGF0aW9ucwoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAg
ICAgIEh5cGVybWVkaWEgICAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JQoKXHVzZXBhY2thZ2V7dXJsLCBoeXBlcnJlZn0JCQkJCQklIFx1cmx7bGlua30gLyBcaHJlZnts
aW5rfXtyZXBsYWNpbmcgdGV4dH0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUK
JSAgICAgICAgIFN0eWxpemF0aW9uICAgICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUKCiUgSGVhZGVycyBvZyBmb290ZXJzClx1c2VwYWNrYWdle2xhc3RwYWdlfSAgICAg
ICAgICAgICAgICAgICAgICAgICAgICUgXGxhc3RwYWdlIGNvbW1hbmQgZm9yIG51bWJlcnMgb2Yg
cGFnZXMKXHVzZXBhY2thZ2V7ZmFuY3loZHJ9ICAgICAgICAgICAgICAgICAgICAgICAgICAgJSBj
cmVhdGUgY29vbCBoZWFkZXJzIGFuZCBmb290ZXJzClxwYWdlc3R5bGV7ZmFuY3l9ICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICUgd2hvIGRvZXNuJ3Qgd2FudCB0aGVpciBwYWdlIHRvIGJl
IGZhbmN5PwoKJSBVc2Ugb2YgY29sdW1ucwpcdXNlcGFja2FnZXttdWx0aWNvbH0KCiUgUXVvdGF0
aW9ucwolICJkYW5pc2giIG9yICJicml0aXNoIgpcdXNlcGFja2FnZVtkYW5pc2g9Z3VpbGxlbWV0
c117Y3NxdW90ZXN9ICAgIAklIHR3byBzdHlsZXM6ICJxdW90ZXMiIG9yID4+Z3VpbGxlbWV0czw8
CiVcTWFrZUF1dG9RdW90ZXvCu317wqt9ICAgICAgICAgICAgICAgICAgICAgICAJJSBkZWNvbW1l
bnQgZm9yIGVhc3kgbWFjcm8KJVxNYWtlQXV0b1F1b3RlKnvigLp9e+KAuX0gICAgICAgICAgICAg
ICAgICAgICAgCSUgZGVjb21tZW50IGZvciBldmVuIGVhc2llciBtYWNyb3MKCgoKJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgICAgICAgICBNYXRoICAgICAgICAgICAgICUK
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgdmFyaW91cyBiYXNpYyBzdHVmZgpc
dXNlcGFja2FnZXtibSwgbWF0aHRvb2xzLCBhbXNtYXRofQoKJSBWYXJpb3VzIHN5bWJvbCBwYWNr
YWdlcwolXHVzZXBhY2thZ2V7YW1zc3ltYn0KXHVzZXBhY2thZ2VbdXRvcGlhXXttYXRoZGVzaWdu
fQkJCQkJCSUgZnVsbCBvdmVyd3JpdGUgb2YgdGhlIGZvbnQgc3lzdGVtClx1c2VwYWNrYWdle3N0
bWFyeXJkfQkJCQkJCQkJJSBldmVuIG1vcmUgc3ltYm9scwoKXGxldFxtYXRoY2FsXHVuZGVmaW5l
ZAkJCQkJCQkJJSBMZXQncyByZWRlZmluZSB0aGUgbWF0aGNhbCBhbHBoYWJldApcRGVjbGFyZU1h
dGhBbHBoYWJldHtcbWF0aGNhbH17T01TfXtjbXN5fXttfXtufQoKJSBNYXRoIHNob3J0Y3V0cwpc
cmVuZXdjb21tYW5ke1xkfXtcLCBcbWF0aHJte2R9fSAgICAgICAgICAgICAgICAgICAgJSBcZCA9
IGRpZmZlcmVudGlhbCBkIHdpdGggYSBiaXQgb2Ygc3BhY2luZwpcbmV3Y29tbWFuZHtcZX17XG1h
dGhybXtlfX0gICAgICAgICAgICAgICAgICAgICAgICAgJSBcZSA9IGV1bGVycyBudW1iZXIKXG5l
d2NvbW1hbmR7XFJ9e1xtYXRoYmJ7Un19ICAgICAgICAgICAgICAgICAgICAgICAgICUgXFIgPSBS
ZWFsIG51bWJlcnMKXG5ld2NvbW1hbmR7XE59e1xtYXRoYmJ7Tn19ICAgICAgICAgICAgICAgICAg
ICAgICAgICUgXE4gPSBOYXR1cmFsIG51bWJlcnMKXG5ld2NvbW1hbmR7XEN9e1xtYXRoYmJ7Q319
ICAgICAgICAgICAgICAgICAgICAgICAgICUgXEMgPSBDb21wbGV4IG51bWJlcnMKXG5ld2NvbW1h
bmR7XFF9e1xtYXRoYmJ7UX19ICAgICAgICAgICAgICAgICAgICAgICAgICUgXFEgPSBSYXRpb25h
bCBudW1iZXJzClxuZXdjb21tYW5ke1xGfXtcbWF0aGJie0Z9fQkJCQkJCQklIFxGCgpcRGVjbGFy
ZVBhaXJlZERlbGltaXRlclxjZWlse1xsY2VpbH17XHJjZWlsfSAgICAgICAgJSBcY2VpbHthcmd9
CVxjZWlsKnthcmd9IGZvciBhdXRvbWF0aWMgc2NhbGluZwpcRGVjbGFyZVBhaXJlZERlbGltaXRl
clxmbG9vcntcbGZsb29yfXtccmZsb29yfSAgICAgJSBcZmxvb3J7YXJnfQlcZmxvb3Iqe2FyZ30g
Zm9yIGF1dG9tYXRpYyBzY2FsaW5nClxEZWNsYXJlUGFpcmVkRGVsaW1pdGVyXGFic3tcbHZlcnR9
e1xydmVydH0gICAgICAgICAlIFxhYnN7YXJnfQkJXGFicyp7YXJnfSBmb3IgYXV0b21hdGljIHNj
YWxpbmcKClxuZXdjb3VudGVye2l9CgpcRGVjbGFyZURvY3VtZW50Q29tbWFuZCBcc2VxIHsgZyBn
IGcgZyB9IHsJCQklIFxzZXF7eH17aX17an17c30KCVxzZXRjb3VudGVye2l9ezB9CQkJCQkJCQkl
IHhfaSwgeF9pK3MsIC4uLiB4X2oKCVxJZlZhbHVlVCB7IzJ9IHsgXGFkZHRvY291bnRlcntpfXsj
Mn0gfQoJXElmVmFsdWVURiB7IzF9CgkJeyMxfQoJCXt4fQoJX3sgXGFyYWJpY3tpfSB9LAoJXElm
VmFsdWVURiB7IzR9IAoJCXtcYWRkdG9jb3VudGVye2l9eyM0fX0KCQl7XGFkZHRvY291bnRlcntp
fXsxfX0KCVxJZlZhbHVlVEYgeyMxfSAKCQl7IzF9CgkJe3h9IAoJX3sgXGFyYWJpY3tpfSB9LAoJ
XGRvdHMKCVxJZlZhbHVlVEYgeyMzfQoJCXsgLCAjMV97IzN9IH0KCQl7fQp9CgpcRGVjbGFyZURv
Y3VtZW50Q29tbWFuZCBcZXJvIHsgbSB9IHsKCVxiZWdpbnthcnJheX17Y30KCQlfeyMxfQoJXFwK
CQlcc2ltCglcXAoJCVxwaGFudG9te1xzaW19CglcZW5ke2FycmF5fQp9CgpcRGVjbGFyZURvY3Vt
ZW50Q29tbWFuZCBcc2V0IHsgbSBnIH17IAkJCQklIFxzZXRze1h9e0N9ID0geyBYIHwgQyB9Cgkg
XGxlZnRcbGJyYWNlCgkgCSMxIFxJZlZhbHVlVCB7IzJ9IHsgXCB8IFwgICMyIH0KCSBccmlnaHRc
cmJyYWNlCn0KClxtYWtlYXRsZXR0ZXIJCQkJCQkJCQkJJSBhZGRzIHZlcnRpY2FsIGxpbmVzIHRv
IG1hdHJpY2VzClxyZW5ld2NvbW1hbmQqXGVudkBtYXRyaXhbMV1bKlxjQE1heE1hdHJpeENvbHMg
Y117CiAgXGhza2lwIC1cYXJyYXljb2xzZXAKICBcbGV0XEBpZm5leHRjaGFyXG5ld0BpZm5leHRj
aGFyCiAgXGFycmF5eyMxfX0KXG1ha2VhdG90aGVyCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJQolICAgICAgTG9naWMgYW5kIHByb29mcyAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJQoKJSBQcm9vZnMKXHVzZXBhY2thZ2V7YW1zdGhtfQkJCQkJCQkJJSBU
aGVvcmVtIHBhY2thZ2UKXHRoZW9yZW1zdHlsZXtkZWZpbml0aW9ufQkJCQkJCSUgcGxhaW4sIGRl
ZmluaXRpb24sIHJlbWFyawolXHN3YXBudW1iZXJzCQkJCQkJCQkJJSBJZiB5b3Ugd2FudCB0byBo
YXZlIHRoZSBudW1iZXIgZmlyc3QKCiUgTG9naWMgcGFja2FnZXMKXHVzZXBhY2thZ2V7bHBsZml0
Y2h9CQkJCQkJJSBmaXRjaCBzdHlsZSBwcm9vZnMKCiVcdXNlcGFja2FnZXtsb2dpY3Byb29mfQkJ
CQkJJSBhbHRlcm5hdGl2ZSBwYWNrYWdlLCByZXNlbWJsaW5nIHRoZSBkQmVyTG9nIGJvb2sKJVxz
ZXRsZW5ndGhcc3VicHJvb2Zob3JpenNwYWNlezJlbX0JCQklIEluZGVudCBmb3Igc3VicHJvb2Zz
LiBDaGFuZ2VkIGZvciBmcmVzaCB2YXJpYWJsZXMKCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUKJSAgICAgIENvbG9yIGFuZCBwcmVzZXRzICAgICAgICUKJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUKCiVcdXNlcGFja2FnZXt4Y29sb3J9CQkJCQkJCSUgYmFzaWMgeGNv
bG9yIHBhY2thZ2UKXHVzZXBhY2thZ2VbdGFibGUseGNkcmF3XXt4Y29sb3J9CQkJCSUgeGNvbG9y
IHBhY2thZ2Ugd2l0aCBzdXBwb3J0IGZvciB0YWJsZXMKXGRlZmluZWNvbG9ye2xzdENvbW1lbnR9
e3JnYn17MC40NSwwLjQ1LDAuNDV9CSUgY29kZTogY29tbWVudHMgKEdyZXkpClxkZWZpbmVjb2xv
cntsc3RLZXl9e3JnYn17MC4xMywwLjIxLDF9CQkJJSBjb2RlOiBwcmltYXJ5IGtleXdvcmRzIChC
bHVlKQpcZGVmaW5lY29sb3J7bHN0S2V5Mn17cmdifXsxLDAuNjY2NjY3LDAuMTM3MjZ9ICAlIGNv
ZGU6IHNlY29uZGFyeSBrZXl3b3JkcyAoRGF5WzldIE9yYW5nZSkKXGRlZmluZWNvbG9ye2xzdFN0
cmluZ317cmdifXswLjEsMC42NSwwLjF9CQklIGNvZGU6IHN0cmluZ3MgKEdyZWVuKQpcZGVmaW5l
Y29sb3J7bHN0QmFzZX17cmdifXswLjAsMC4wLDAuMH0JCQklIGNvZGU6IGJhc2UgKEJsYWNrKQoK
CgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAgICAgICAgVGlreiAgICAg
ICAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQoKXHVzZXBhY2thZ2V7
dGlren0JCQkJCQkJCSUgaW1wb3J0IGJhc2VwYWNrYWdlClx1c2V0aWt6bGlicmFyeXtjYWxjfQkJ
CQkJCQklIENvb3JkaW5hdGUgY2FsY3VhdGlvbnMKXHVzZXRpa3psaWJyYXJ5e3Bvc2l0aW9uaW5n
fSAgICAgICAgICAgICAgICAgICAgJSBSZWxhdGl2ZSBwb3NpdGlvbmluZwpcdXNldGlremxpYnJh
cnl7c2hhcGVzfSAgICAgICAgICAgICAgICAgICAgICAgICAlIERlZmluaW5nIG5vZGVzaGFwZXMg
YW5kIG1vcmUgKGlzYSBmb3IgRS9SKQoKJSBTaW1wbGUgdHJlZSBtYWNybyB3aXRoIGNvbXBhYmls
aXR5IHRvIHRpa3oKXHVzZXBhY2thZ2V7dGlrei1xdHJlZX0JCQkJCQkJJSBpbXBvcnQgc2ltcGxl
IHRyZWUgbWFjcm8KXHVzZXRpa3psaWJyYXJ5e2Fycm93c30gICAgICAgICAgICAgICAgICAgICAg
ICAgJSBhcnJvd3MgZm9yIHRyZWVzCgolIFRpa3ogc2V0dGluZ3MgZm9yIHJlZC1ibGFjayB0cmVl
cwpcdGlrenNldHsKICB0cmVlbm9kZS8uc3R5bGUgPSB7YWxpZ249Y2VudGVyLCBpbm5lciBzZXA9
MHB0LCB0ZXh0IGNlbnRlcmVkLAogICAgZm9udD1cc2ZmYW1pbHl9LAogIGFybl9iLy5zdHlsZSA9
IHt0cmVlbm9kZSwgY2lyY2xlLCB3aGl0ZSwgZm9udD1cc2ZmYW1pbHlcYmZzZXJpZXMsIGRyYXc9
YmxhY2ssCiAgICBmaWxsPWJsYWNrLCB0ZXh0IHdpZHRoPTEuNWVtfSwgICAgICAgICAgICAgICUg
YmxhY2sgbm9kZQogIGFybl9yLy5zdHlsZSA9IHt0cmVlbm9kZSwgY2lyY2xlLCB3aGl0ZSwgZm9u
dD1cc2ZmYW1pbHlcYmZzZXJpZXMsIGRyYXc9cmVkLAogICAgZmlsbD1yZWQsIHRleHQgd2lkdGg9
MS41ZW19LCAgICAgICAgICAgICAgJSByZWQgbm9kZQogIGFybl94Ly5zdHlsZSA9IHt0cmVlbm9k
ZSwgcmVjdGFuZ2xlLCBkcmF3PWJsYWNrLCBmaWxsPWJsYWNrLAogICAgbWluaW11bSB3aWR0aD0w
LjVlbSwgbWluaW11bSBoZWlnaHQ9MC41ZW19ICAlIG5pbCBub2RlCn0KCiUgVGlreiBBdXRvbW90
YSBmb3IgVHVyaW5nIE1hY2hpbmVzClx1c2V0aWt6bGlicmFyeXthdXRvbWF0YX0KCiUgVGlreiBF
L1IgZGlhZ3JhbQpcdXNldGlremxpYnJhcnl7ZXJ9CgolIEdyYXBoaWNzIGFuZCBwbG90cwpcdXNl
cGFja2FnZXtncmFwaGljeH0JCQkJCQkJJSBpbXBvcnQgYmFzZXBhY2thZ2UgZm9yIGdyYXBocwpc
dXNlcGFja2FnZXtwZ2ZwbG90c30JCQkJCQkJJSBpbXBvcnQgcGdmcGxvdHMKXHVzZXBnZnBsb3Rz
bGlicmFyeXtmaWxsYmV0d2Vlbn0JCQkJJSBhZGQgZmlsbEJldHdlZW4gY29tbWFuZApccGdmcGxv
dHNzZXR7Y29tcGF0PTEuMTB9CQkJCQkJJSBjaG9vc2UgdmVyc2lvbiBvZiBwZ2ZwbG90cwoKJSBN
YWNybyBmb3IgY2lyY2xlIHdpdGggc3ltYm9sIGluc2lkZS4KXG5ld2NvbW1hbmQqXGNpcmNsZWRb
MV17IFx0aWt6W2Jhc2VsaW5lPShDLmJhc2UpXVxub2RlW2RyYXcsY2lyY2xlLGlubmVyIHNlcD0w
LjVwdF0oQykgeyMxfTtcIX0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAg
ICAgICAgICAgIENvZGUgICAgICAgICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUKXG5ld2NvbW1hbmR7XGNvZGV9WzFde3tcc2YgIzF9fQkJCQkJJSBcY29kZXtYfSB3cml0
ZXMgWCBpbiBhIGNvZGUtYXBwcm9wcmlhdGUgZm9udAoKCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUKJSAgICAgICAgIGxzdGxpc3RpbmcgICAgICAgICAgICUKJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgSW1wb3J0IGxzdGxpc3RpbmdzIC0gYmVhdXRpZnVsIHNv
dXJjZWNvZGUhClx1c2VwYWNrYWdle2xpc3RpbmdzfQoKCiUgQ3VzdG9tIGxhbmd1YWdlIGRlZmlu
aXRpb25zCiUgRGVmaW5pdGlvbiBvZiBQc2V1ZG9jb2RlClxsc3RkZWZpbmVsYW5ndWFnZXtwc2V1
ZG9jb2RlfXsKICBrZXl3b3Jkcz1bMV17CiAgCSAgICAgYnksIGJ5LCBkb3dudG8sIGVsc2UsIGVy
cm9yLCBmb3IsIGlmLCByZXBlYXQsIHJldHVybiwgdG8sIHVudGlsLCB3aGlsZSwgd2hpbGUKICAJ
fSwJCQkJCQkJCSAgICAJCSUgbGlzdCBvZiBrZXl3b3JkcywgZmlyc3QgYW5kIGxhc3QgYXJlIG5v
dCB1c2VkCiAga2V5d29yZHM9WzJdewogICAgICAgIGFuZCwgYW5kLCBvciwgTklMLCBOSUwKICB9
CiAgc2Vuc2l0aXZlPWZhbHNlLAkJCQkJCQkJJSBrZXl3b3JkcyBhcmUgbm90IGNhc2Utc2Vuc2l0
aXZlCiAgbW9yZWNvbW1lbnQ9W2xdey8vfSwJCQkJCQkJJSBsIGlzIGZvciBsaW5lIGNvbW1lbnQK
ICBtb3JlY29tbWVudD1bc117Lyp9eyovfSwJCQkJCQklIHMgaXMgZm9yIHN0YXJ0IGFuZCBlbmQg
ZGVsaW1pdGVyCiAgbW9yZXN0cmluZz1bYl0iCQkJCQkJCQklIHN0cmluZ3MgYXJlIGVuY2xvc2Vk
IGluIGRvdWJsZSBxdW90ZXMKfQoKCiUgU2V0dGluZ3MgZm9yIGxzdGxpc3RpbmdzClxsc3RzZXR7
bGFuZ3VhZ2U9cHNldWRvY29kZSwJCQkJCSUgY2hvb3NlIGxhbmd1YWdlCiAgY29sdW1ucz1mbGV4
aWJsZSwJCQkJCQkJCSUgbGV0IHRoZSBib3ggYWxpZ24gdG8gdGhlIHdpZHRoIG9mIHRoZSBwYWdl
CiAgYnJlYWtsaW5lcz10cnVlLAkJCQkJCQkJJSBhdXRvbWF0aWNhbGx5IGJyZWFrIGxpbmVzCiAg
YnJlYWthdHdoaXRlc3BhY2U9dHJ1ZSwJCQkJCQklIGF1dG9tYXRpY2FsbHkgYnJlYWsgc2hvdWxk
IHRoZXJlIG9ubHkgYmUgd2hpdGUgc3BhY2UuCiAgbnVtYmVycz1sZWZ0LAkJCQkJCQkJCSUgbnVt
YmVyaW5nOiBub25lLCBsZWZ0LCByaWdodAogIG51bWJlcnNlcD01cHQsCQkJCQkJCQklIGRpc3Rh
bmNlIGJldHdlZW4gbGluZW51bWJlcnMgYW5kIGNvZGUKICBudW1iZXJzdHlsZT1cY29sb3J7bHN0
Q29tbWVudH0sCQkJCSUgY2hhbmdlIHN0eWxlIG9mIG51bWJlcmluZyAtIGN1cnJlbnRseSBncmV5
LgogIHN0ZXBudW1iZXI9MSwJCQkJCQkJCQklIHN0ZXAgYmV0d2VlbiB0byBsaW5lLW51bWJlcnMu
IDEgPSBlYWNoIGxpbmUgaXMgbnVtYmVyZWQKICBzaG93c3BhY2VzPWZhbHNlLAkJCQkJCQkJJSBz
aG93IHNwYWNlcyBldmVyeXdoZXJlIC0gYWRkaW5nIHBhcnRpY3VsYXIgdW5kZXJzY29yZXMKICBz
aG93c3RyaW5nc3BhY2VzPWZhbHNlLAkJCQkJCSUgdW5kZXJsaW5lIHNwYWNlcyB3aXRoaW4gc3Ry
aW5ncyBvbmx5LgogIHNob3d0YWJzPWZhbHNlLAkJCQkJCQkJJSBzaG93IHRhYnMgd2l0aGluIHN0
cmluZ3MgYWRkaW5nIHBhcnRpY3VsYXIgdW5kZXJzY29yZXMuCiAgZXNjYXBlaW5zaWRlPXsqQH17
QCp9LCAgICAgICAgICAgICAgICAJCSUgaWYgeW91IHdhbnQgdG8gYWRkIExhVGVYIHdpdGhpbiB5
b3VyIGNvZGUKICBiYXNpY3N0eWxlPVx0dGZhbWlseSBcY29sb3J7bHN0QmFzZX0sCQkJJSBzZXQg
YmFzaWMgY29sb3IKICBjb21tZW50c3R5bGU9XGNvbG9ye2xzdENvbW1lbnR9LAkJCQklIHNldCBj
b2xvciBvZiBjb21tZW50cwogIGtleXdvcmRzdHlsZT1bMV1cY29sb3J7bHN0S2V5fSwJCQkJJSBz
ZXQgY29sb3Igb2YgcHJpbWFyeSBrZXl3b3JkcwogIGtleXdvcmRzdHlsZT1bMl1cY29sb3J7bHN0
S2V5Mn0sCQkJCSUgc2V0IGNvbG9yIG9mIHNlY29uZGFyeSBrZXl3b3JkcwogIHN0cmluZ3N0eWxl
PVxjb2xvcntsc3RTdHJpbmd9LAkJCQklIHNldCBjb2xvciBvZiBzdHJpbmdzCn0KCiUgbHN0bGlz
dGluZyAtIFB1dCBpdCBiZWF1dGlmdWxseSBpbiB0aGUgbWlkZGxlClxsc3RzZXR7eGxlZnRtYXJn
aW49IC4xXHRleHR3aWR0aCAsICAgICAJCQkJCQkJJSBsZWZ0bWFyZ2luIGJlaW5nIDEwJSBvZiB0
aGUgY3VycmVudCB3aWR0aAogIHhyaWdodG1hcmdpbj0gLjFcdGV4dHdpZHRoLCAgICAgICAgICAg
CQkJCQkJCSUgcmlnaHQgbWFyZ2luIGFsc28gMTAlCiAgZnJhbWU9Ym90dG9tbGluZSAgICAgICAg
ICAgICAgICAgICAgICAJCQkJCQkJJSBEcmF3IGEgbGluZSBvbiB0aGUgYm90dG9tIG9mIHRoZSBz
dXJyb3VuZGluZyBib3gKfQoKJSBsc3RsaXN0aW5nIGhlYWRlcgpcRGVjbGFyZUNhcHRpb25Gb250
e3doaXRlfXtcY29sb3J7d2hpdGV9fSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICUgZm9udHN0eWxlIG9mIGNhcHRpb24KXERlY2xhcmVDYXB0aW9uRm9ybWF0e2xpc3Rpbmd9
e1xjb2xvcmJveHtncmF5fXtccGFyYm94e1xsaW5ld2lkdGh9eyMxIzIjM319fSAgICAlIGNyZWF0
ZSBuaWNlIGdyZXkgYm94ZXMgZm9yIGNhcHRpb25zClxjYXB0aW9uc2V0dXBbbHN0bGlzdGluZ117
Zm9ybWF0PWxpc3RpbmcsbGFiZWxmb250PXdoaXRlLHRleHRmb250PXdoaXRlfSAgICAgICAgJSBh
cHBseSBzZXR0aW5ncyB0byBsaXN0aW5nCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlCiUgICAgICBUaXRsZSBhbmQgaW5mb3JtYXRpb24gICAgICAgJQolJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKXHNldHZhbHVle3RpdGxlID0gS2VlcCBDYWxtIGFuZCBc
dGV4dGJhY2tzbGFzaCBzZXR0aXRsZX0KXHNldHZhbHVle3N1YnRpdGxlID0gfQoKXERlY2xhcmVE
b2N1bWVudENvbW1hbmQgXHNldHRpdGxlIHsgbSBnIH17IAkJCQklIFxzZXRUaXRsZXt0aXRsZX17
c3VidGl0bGV9CgkgXHNldHZhbHVle3RpdGxlID0gXGh1Z2UgIzF9CgkgXElmVmFsdWVUIHsjMn0g
eyBcc2V0dmFsdWV7c3VidGl0bGUgPSBcXCBcbGFyZ2UgIzJ9IH0KfQoKXHNldHZhbHVle25hbWUg
PSBTdGVmZmFuIFPDuGx2c3Rlbn0KXHNldHZhbHVle2VtYWlsID0gMjAxNTA1ODMyQHBvc3QuYXUu
ZGt9ClxzZXR2YWx1ZXtpZCA9IFwsIGF1NTM0MDY4fQoKXERlY2xhcmVEb2N1bWVudENvbW1hbmQg
XGFkZGF1dGggeyBtIGcgZyB9eyAJCQklIFxzZXRBdXRoe25hbWV9e2VtYWlsfXtpZH0KCSBcc2V0
dmFsdWV7bmFtZSA9ICMxfQoJIFxhdXRob3J7IzF9CgkgXElmVmFsdWVUIHsjMn0gewoJIAlcc2V0
dmFsdWV7ZW1haWwgPSAjMn0KCSAJXGFmZmlse1xwcm90ZWN0XGhyZWZ7bWFpbHRvOiMyfXsjMn19
CgkgfQoJIFxJZlZhbHVlVCB7IzN9IHsKCSAJXHNldHZhbHVle2lkID0gIzN9CgkgfQp9CgpcdGl0
bGV7XGdldHZhbHVle3RpdGxlfSBcZ2V0dmFsdWV7c3VidGl0bGV9fQoKXGRhdGV7XHRvZGF5fQoK
XHNldHZhbHVle29mID0gb2Z9CgpcbGhlYWR7XHByb3RlY3RcaHJlZntcZ2V0dmFsdWV7ZW1haWx9
fXtcZ2V0dmFsdWV7bmFtZX0gXGdldHZhbHVle2lkfX19ClxjaGVhZHt9ClxyaGVhZHtcQGN1cnJl
bnRsYWJlbG5hbWVcIHwgXHRoZXBhZ2VcIFxnZXR2YWx1ZXtvZn0gXHBhZ2VyZWZ7TGFzdFBhZ2V9
fQoKJVxsZm9vdHt9CiVcY2Zvb3R7fQolXHJmb290e30K
"""
preamble_en = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSBTZXR0aW5ncyBmb3IgZG9jdW1l
bnQgKGVuZ2xpc2gpICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgSW5w
dXQgY29tbW9uIGRlZmluaXRpb24KXGlucHV0e3ByZWFtYmxlX2Jhc2UudGV4fQoKCiUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICBFbmNvZGluZyBhbmQgaHlwaGVuYXRpb24gICAl
CiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgQmFzaWNzOiBmb250LCBjb2RlYyBl
dGMuClx1c2VwYWNrYWdlW2VuZ2xpc2hde2JhYmVsfQkJCQkJCSUgYmFiZWwgaXMgZm9yIGh5cGhl
bmF0aW9uIGFuZCBvdGhlciBnb29kaWVzCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlCiUgICAgICAgICBsc3RsaXN0aW5nICAgICAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlClxyZW5ld2NvbW1hbmR7XGxzdGxpc3RpbmduYW1lfXtDb2RlfSAgICAgICAg
ICAgICAgJSBmb3Igb25lIGJsb2NrIG9mIGNvZGUgYWxvbmUKXHJlbmV3Y29tbWFuZHtcbHN0bGlz
dGxpc3RpbmduYW1lfXtMaXN0IG9mIGNvZGV9ICAlIGZvciBtb3JlIHBpZWNlcyBvZiBjb2RlIGlu
IG9uZQoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAgTG9naWMgYW5k
IHByb29mcyAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIFRoZW9y
ZW0gZW52aXJvbm1lbnRzClxuZXd0aGVvcmVte3RoZW9yZW19e1RoZW9yZW19W3NlY3Rpb25dClxu
ZXd0aGVvcmVte2xlbW1hfXtMZW1tYX1bc2VjdGlvbl0KXG5ld3RoZW9yZW17cHJvcG9zaXRpb259
e1Byb3Bvc2l0aW9ufVtzZWN0aW9uXQpcbmV3dGhlb3JlbXtjb3JvbGxhcnl9e0Nvcm9sbGFyeX1b
c2VjdGlvbl0KXG5ld3RoZW9yZW17ZGVmaW5pdGlvbn17RGVmaW5pdGlvbn1bc2VjdGlvbl0KXG5l
d3RoZW9yZW17Y29uamVjdHVyZX17Q29uamVjdHVyZX1bc2VjdGlvbl0KXHJlbmV3Y29tbWFuZCp7
XHByb29mbmFtZX17UHJvb2Z9CgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUg
ICAgICBFeGFtcGxlIGVudmlyb25tZW50ICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlClxuZXd0aGVvcmVte2V4YW1wbGV9e0V4YW1wbGV9W3NlY3Rpb25d
"""
preamble_dk = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIFNldHRpbmdzIGZvciBkb2N1bWVu
dCAoZGFuaXNoKSAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgSW5wdXQg
Y29tbW9uIGRlZmluaXRpb24KXGlucHV0e3ByZWFtYmxlX2Jhc2UudGV4fQoKJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgIEVuY29kaW5nIGFuZCBoeXBoZW5hdGlvbiAgICUKJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSBCYXNpY3M6IGZvbnQsIGNvZGVjIGV0Yy4K
XHVzZXBhY2thZ2VbZGFuaXNoXXtiYWJlbH0JCQkJCQklIGJhYmVsIGlzIGZvciBoeXBoZW5hdGlv
biBhbmQgb3RoZXIgZ29vZGllcwpccmVuZXdjb21tYW5ke1xkYW5pc2hoeXBoZW5taW5zfXsyMn0J
CQklIGV2ZW4gYmV0dGVyIGRhbmlzaCBoeXBoZW5hdGlvbiEKCiUgLmJpYiBkYW5pc2ggcmVkZWZp
bml0aW9uIGZvciBhdXRob3IgaW4gdGl0bGUKXHJlbmV3Y29tbWFuZFxBdXRoYW5keyBvZyB9Clxy
ZW5ld2NvbW1hbmRcQXV0aGFuZHN7LCBvZyB9ClxyZW5ld2NvbW1hbmRcQWZmaWxmb250e1xzbWFs
bH0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgICAgIGxzdGxpc3Rp
bmcgICAgICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgbHN0bGlz
dGluZyBsYW5ndWFnZSByZWRlZmluaXRpb25zClxyZW5ld2NvbW1hbmR7XGxzdGxpc3RpbmduYW1l
fXtLb2RlfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJSBmb3Ig
b25lIGJsb2NrIG9mIGNvZGUgYWxvbmUKXHJlbmV3Y29tbWFuZHtcbHN0bGlzdGxpc3RpbmduYW1l
fXtMaXN0ZSBhZiBcbHN0bGlzdGluZ25hbWUgcn0gICAgICAgICAgICAgICAgICAlIGZvciBtb3Jl
IHBpZWNlcyBvZiBjb2RlIGluIG9uZQoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JQolICAgICAgTG9naWMgYW5kIHByb29mcyAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJQolIFRoZW9yZW0gZW52aXJvbm1lbnRzClxuZXd0aGVvcmVte3RoZW9yZW19e1PD
pnRuaW5nfVtzZWN0aW9uXQpcbmV3dGhlb3JlbXtsZW1tYX17TGVtbWF9W3NlY3Rpb25dClxuZXd0
aGVvcmVte3Byb3Bvc2l0aW9ufXtQcm9wb3NpdGlvbn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17Y29y
b2xsYXJ5fXtLb3JvbGxhcn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17ZGVmaW5pdGlvbn17RGVmaW5p
dGlvbn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17Y29uamVjdHVyZX17Rm9ybW9kbmluZ31bc2VjdGlv
bl0KXHJlbmV3Y29tbWFuZCp7XHByb29mbmFtZX17QmV2aXN9CgoKJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUKJSAgICAgIEV4YW1wbGUgZW52aXJvbm1lbnQgICAgICUKJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKXG5ld3RoZW9yZW17ZXhhbXBsZX17RWtzZW1wZWx9W3Nl
Y3Rpb25dCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICAgVGl0bGUg
YW5kIGxheW91dCAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlClxzZXR2
YWx1ZXtvZiA9IGFmfQo=
"""

    
parser = argparse.ArgumentParser(description='Make a LaTeX project from Steffan\'s awesome template')
parser.add_argument('path', type=str, nargs='+', help='the path to build the project')
parser.add_argument('-l', type=str, nargs=1, help='the language of the preamble, "en" or "dk"', default=["en"])
parser.add_argument('--zip', dest='zip', action='store_const', const=True, default=False, help='zip the resulting project')
#TODO: Add -c option to clean folders first / after
args = parser.parse_args()

preamble_locale = 'preamble_dk' if args.l[0] == 'dk' else 'preamble_en'
preamble_l_content = preamble_dk if args.l[0] == 'dk' else preamble_en
preamble_l_content = base64.decodestring( preamble_l_content )
preamble_base_content = base64.decodestring( preamble_base )
template_content = base64.decodestring( template )

#TODO: make this specifiable in the prepare.py
######## MODIFICATIONS ########

template_content = template_content.replace( '\subimport{../preamble/}{preamble_en.tex}',
'\subimport{preamble/}{' + preamble_locale + '.tex}')

###############################

PATH = " ".join(args.path)
if not os.path.exists(PATH):
    os.makedirs(PATH)
os.chdir(PATH)
if not os.path.exists('preamble'):
    os.mkdir('preamble')
with open(os.path.join('preamble', preamble_locale + '.tex'), 'w') as preamble_l_file:
    preamble_l_file.write(preamble_l_content)

with open(os.path.join('preamble', 'preamble_base.tex'), 'w') as preamble_base_file:
    preamble_base_file.write(preamble_base_content)

with open('template.tex', 'w') as template_file:
    template_file.write(template_content)

if args.zip:
    fname = os.getcwd() #includes the filepath, sice we cd'ed to it
    import zipfile
    zipf = zipfile.ZipFile(fname + '.zip', 'w', zipfile.ZIP_DEFLATED)
    zipf.write(os.path.join('preamble', preamble_locale + '.tex'))
    zipf.write(os.path.join('preamble', 'preamble_base.tex'))
    zipf.write('template.tex')
    zipf.close()
raw_input('Success, Press enter to exit')
